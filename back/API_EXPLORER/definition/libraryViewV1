{
  "apiVersion": "1.0.0",
  "swaggerVersion": "1.2",
  "apis": [
    {
      "path": "/V1/assets",
      "operations": [
        {
          "method": "GET",
          "summary": "GetAssetsByUserid",
          "notes": "Returns all the assets of the  userid's (in cookie) library ",
          "nickname": "GetAssetsByUserid",
          "type": "array",
          "items": {"$ref": "AssetId"},
          "authorizations": {},
          "headers": {"isweb": "1"},
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
               "code": 400,
               "message" : "Database error"
            },
            {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 200,
              "message": "User not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/V1/sortedFilteredPagedAssets",
      "operations": [
        {
          "method": "GET",
          "summary": "GetSortedFilteredPagedAssest",
          "notes": "Returns the assets of a user (if userId in cookie), filtered, sorted and paged",
          "nickname": "GetSortedFilteredPagedAssets",
          "type": "array",
          "authorizations": {},
          "headers": {"isweb": "1"},
          "produces": [
            "application/json"
          ],
        "parameters": [
          {
            "filter": "filter",
                         "description": "filter",
                         "paramType": "query",
                         "name": "filter",
                         "required": false,
                         "type": "string"
          },
          {
            "sort": "sort",
                         "description": "sort",
                         "paramType": "query",
                         "name": "sort",
                         "required": false,
                         "type": "string"
          },
          {
            "first": "order",
                         "description": "order",
                         "paramType": "query",
                         "name": "order",
                         "required": false,
                         "type": "string"
          },
          {
            "first": "first",
                         "description": "first",
                         "paramType": "query",
                         "name": "first",
                         "required": false,
                         "type": "string"
          },
          {
            "length": "length",
                         "description": "length",
                         "paramType": "query",
                         "name": "length",
                         "required": false,
                         "type": "string"
          },
            {
              "max": "max",
                           "description": "max",
                           "paramType": "query",
                           "name": "max",
                           "required": false,
                           "type": "integer"
            }

        ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 400,
              "message": "several kind of errors"
            }
          ]
        }
      ]
    },
    {
      "path": "/V1/assets/{assetid}/contents",
      "operations": [
        {
          "method": "GET",
          "summary": "GetContentByAsset",
          "notes": "Returns all the contents of the asset",
          "nickname": "GetContentByAsset",
          "type": "GetContentByAssetModel",

          "authorizations": {},
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "assetid": "asset ID",
              "description": "asset number",
              "paramType": "path",
              "name": "Assetid",
              "required": true,
              "type": "string"
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 400,
              "message": "Invalid asset"
            },
            {
               "code" : 500,
               "message" : "Internal error"
            }
          ]
        }
      ]
    },
    {
      "path": "/V1/assets/{assetid}/contents/{contentid}",
      "operations": [
        {
          "method": "GET",
          "summary": "GetContent",
          "notes": "Returns a complete content (contents of the same package included",
          "nickname": "GetContent",
          "type": "",

          "authorizations": {},
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "assetid": "asset ID",
              "description": "asset number",
              "paramType": "path",
              "name": "Assetid",
              "required": true,
              "type": "string"
            },
            {
              "contentid": "content ID",
              "description": "content id",
              "paramType": "path",
              "name": "Contentid",
              "required": true,
              "type": "string"
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code":400,
              "message":"several error"
            },
            {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 200,
              "message": "No content found"
            }
          ]
        }
      ]
    },
    {
      "path": "/V1/contents/{contentid}/metadata",
      "operations": [
        {
          "method": "GET",
          "summary": "GetDataByContent",
          "notes": "Returns metadata of the content contentid",
          "nickname": "GetDataByContent",
          "type": "GetDataByContentModel",
          "authorizations": {},
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "contentid": "Content ID",
              "description": "content number",
              "paramType": "path",
              "name": "Contentid",
              "required": true,
              "type": "string"
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code":400,
              "message": "several error"
            },
            {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 200,
              "message": "No content found"
            }
          ]
        }
      ]
    },
    {
      "path": "/V1/contents/{contentid}/cover/ratio",
      "operations": [
        {
          "method": "PUT",
          "summary": "updateCoverRatio",
          "notes": "update the ratio (h/l) of the content's cover",
          "nickname": "updateCoverRatio",
          "authorizations": {},
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "contentid": "Content ID",
                           "description": "content number",
                           "paramType": "path",
                           "name": "Contentid",
                           "required": true,
                           "type": "string"
                         },
            {
              "name": "body",
                           "description": "token and ratio",
                           "paramType": "body",
                           "required": true,
                           "type":  "{\"token\":\"xxx-yyy-zzz\",\"ratio\":\"0.6\"}",
                           "allowMultiple": false
                         }
          ],
          "responseMessages": [
                        {
                          "code":400,
                          "message": "several error"
                        },
                        {
                          "code": 200,
                          "message": "Success"
                        }
            ]
        }
      ]
    },
    {
      "path": "/V1/recents",
      "operations": [
        {
          "method": "GET",
          "summary": "GetAllRecentAssets",
          "notes": "Returns all the recents assets according to the device's screen",
          "nickname": "GetAllRecentAssets",
          "type": "array",
          "items": {"$ref": "ReductedAsset"},
          "authorizations": {},
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "state": "state",
              "description": "List of states {Packed,Activated,Lent}",
              "paramType": "query",
              "name": "state",
              "required": false,
              "type": "string"
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
                "code":400,
                "message" :"Error"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        }
      ]
    },
    {
      "path": "/V1/allAssets",
      "operations": [
        {
          "method": "GET",
          "summary": "getAllAssets",
          "notes": "Returns all assets ",
          "nickname": "getAllAssets",
          "type": "array",
          "items": {"$ref": "allAsset"},
          "authorizations": {},
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Unauthorized"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/enrichedAssets",
      "operations": [
        {
          "method": "GET",
          "summary": "GetAllAssetsByState",
          "notes": "Returns all the assets in function of the required state",
          "nickname": "GetAllAssetsByState",
          "type": "array",
          "items": {"$ref": "ReductedAsset"},
          "authorizations": {},
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "state": "state",
              "description": "List of states {Packed,Activated,Lent}",
              "paramType": "query",
              "name": "State",
              "required": true,
              "type": "string",
              "allowMultiple": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 400,
              "message": "several error"
            },
            {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 200,
              "message": "No content found"
            }
          ]
        }
      ]
    },
    {
      "path": "/V1/numberByTab",
      "operations": [
        {
          "method": "GET",
          "summary": "GetNumberByTab",
          "notes": "Get asset's number by Tab",
          "nickname": "GetNumberByTab",
          "type": "StateInfo",
          "authorizations": {},
          "produces": [
            "application/json"
          ],
          "responseMessages": [
 {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 400,
              "message": "several error"
            },
            {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 200,
              "message": "No content found"
            }
          ]
        }
      ]
    },
    {
     "path" : "/v1/historyNumberByTab",
     "operations": [
             {
               "method": "GET",
               "summary": "GetHistoryNumberByTab",
               "notes": "Get History number by Tab",
               "nickname": "GetHistoryNumberByTab",
               "type": "StateInfo",
               "authorizations": {},
               "produces": [
                 "application/json"
               ],
               "responseMessages": [
 {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 400,
              "message": "several error"
            },
            {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 200,
              "message": "No content found"
            }
               ]
             }
           ]
    },
    {
        "path": "/v1/tokens/{tokenid}",
        "operations": [
            {
                "method": "POST",
                "summary": "use Token",
                "notes": "use a token to get a new asset (sale, borrowed or transferd)",
                "nickname": "useToken",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "tokenid": "Token ID",
                        "description": "token",
                        "paramType": "path",
                        "name": "tokenid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responseMessages": [
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 400,
              "message": "several error"
            },
            {
              "code": 404,
              "message": "transaction error"
            },
            {
              "code": 201,
              "message": "Success"
            }

            ]
            }
        ]
    },
    {
        "path": "/v1/assets/{assetid}/contents/{contentid}/download",
        "operations": [
            {
                "method": "GET",
                "summary": "download content",
                "notes": "for app get url to download content",
                "nickname": "downloadContent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "assetid": "Asset ID",
                        "description": "asset",
                        "paramType": "path",
                        "name": "assetid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "contentid": "Content ID",
                        "description": "content",
                        "paramType": "path",
                        "name": "contentid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responseMessages": [
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 400,
              "message": "several error"
            },
            {
              "code":403,
              "message": "download error"
            },
            {
              "code":404,
              "message":"invalid asset"
            },
            {
              "code": 200,
              "message": "Success"
            }

                ]
            }
        ]
    },
    {
        "path": "/v1/assets/{assetid}/lend",
        "operations": [
            {
                "method": "POST",
                "summary": "lend asset",
                "notes": "lend an asset",
                "nickname": "lendAsset",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "assetid": "Asset ID",
                        "description": "asset",
                        "paramType": "path",
                        "name": "assetid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "borrower": "Borrower",
                        "description": "Borrower",
                        "paramType": "body",
                        "name": "borrower",
                        "required": false,
                        "type": " {\"borrower\":\"toto\"}"
                    }
                ],
                "responseMessages": [
                    {
                                  "code": 401,
                                  "message": "Unauthorized"
                                },
                                {
                                  "code": 400,
                                  "message": "several error"
                                },
                                {
                                  "code":403,
                                  "message": "lend error"
                                },
                                {
                                  "code":201,
                                  "message":"asset not found"
                                },
                                {
                                  "code": 200,
                                  "message": "Success"
                                }
                ]
            },
          {
            "method": "DELETE",
            "summary": "cancel lend asset",
            "notes": "cancel lend an asset",
            "nickname": "cancelLendAsset",
            "produces": [
              "application/json"
            ],
            "parameters": [
              {
                "assetid": "Asset ID",
                "description": "asset",
                "paramType": "path",
                "name": "assetid",
                "required": true,
                "type": "string"
              }
            ],
            "responseMessages": [
              {
                            "code": 401,
                            "message": "Unauthorized"
                          },
                          {
                            "code": 400,
                            "message": "several error"
                          },
                          {
                            "code":403,
                            "message": "lend error"
                          },
                          {
                            "code":404,
                            "message":"database error"
                          },
                          {
                            "code": 201,
                            "message": "Success"
                          }
            ]
          },
          {
            "method": "PUT",
            "summary": "update lend asset",
            "notes": "update lend an asset",
            "nickname": "updateLendAsset",
            "produces": [
              "application/json"
            ],
            "parameters": [
              {
                "assetid": "Asset ID",
                "description": "asset",
                "paramType": "path",
                "name": "assetid",
                "required": true,
                "type": "string "
              },
              {
                "borrower": "Borrower",
                "description": "Borrower",
                "paramType": "body",
                "name": "borrower",
                "required": true,
                "type": " {\"borrower\":\"toto\"}"
              }
            ],
            "responseMessages": [
            {
               "code": 401,
               "message": "Unauthorized"
             },
             {
               "code": 400,
               "message": "several error"
             },
             {
               "code":404,
               "message": "several error"
             },
             {
               "code": 200,
               "message": "asset not found"
             },
             {
               "code": 201,
               "message": "succes"
             },
             {
                "code":500,
                "message": "Internal error"
             }
            ]
          }
        ]
    },
    {
      "path": "/v1/assets/{assetid}/returnBorrowed",
      "operations": [
        {
          "method": "POST",
          "summary": "returnBorrowed",
          "notes": "return specific borrowed asset ",
          "nickname": "returnBorrowedAsset",
          "authorizations": {},
          "produces": [
            "application/json"
          ],
          "parameters":
          [
              {
                "assetid": "Asset ID",
                "description": "asset",
                "paramType": "path",
                "name": "assetid",
                "required": true,
                "type": "string "
              }
          ],
          "responseMessages":
          [
            {
               "code": 401,
               "message": "Unauthorized"
             },
             {
               "code": 400,
               "message": "several error"
             },
             {
               "code":404,
               "message": "dataBase error"
             },
             {
               "code": 201,
               "message": "succes"
             },
             {
                "code":500,
                "message": "Internal error"
             }
          ]
        }
      ]
    },
    {
                  "path": "/v1/assets/{assetid}/manualRetrieveAsset",
                    "operations": [
                      {
                        "method": "POST",
                        "summary": "retrieve Asset",
                        "notes": "Get the lent asset back in the library",
                        "nickname": "retrieveAsset",
                        "authorizations": {},
                        "produces": [
                          "application/json"
                        ],
                      "parameters": [
                        {
                          "assetId": "asset ID",
                          "description": "asset",
                          "paramType": "path",
                          "name": "assetId",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "event":"event type",
                          "description" : "{\"event\":\"E\"}",
                          "paramType" : "body",
                          "name" : "event",
                          "required" : true,
                          "type":"string"
                        }
                      ],
                        "responseMessages": [
                            {
                              "code": 200,
                              "message": "Asset retrieved"
                            },
                            {
                              "code": 500,
                              "message": "error"
                            }
                        ]
                      }
                  ]
    },
    {
        "path": "/v1/assets/{assetid}/transfer",
        "operations": [
            {
                "method": "POST",
                "summary": "transfer asset",
                "notes": "transfer an asset",
                "nickname": "transferAsset",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "assetid": "Asset ID",
                        "description": "asset",
                        "paramType": "path",
                        "name": "assetid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "recipient": "Recipient",
                        "description": "Recipient",
                        "paramType": "body",
                        "name": "recipient",
                        "required": false,
                        "type": " {\"recipient\":\"toto\"}"
                    }
                ],
                "responseMessages": [
             {
                "code": 401,
                "message": "Unauthorized"
              },
              {
                "code": 400,
                "message": "several error"
              },
              {
                "code":403,
                "message": "several error"
              },
              {
                "code": 200,
                "message": "asset not found"
              },
              {
                "code": 201,
                "message": "succes"
              },
              {
                 "code":500,
                 "message": "Internal error"
              }
                ]
            },
          {
            "method": "DELETE",
            "summary": "cancel transfer asset",
            "notes": "cancel transfer an asset",
            "nickname": "cancelTransferAsset",
            "produces": [
              "application/json"
            ],
            "parameters": [
              {
                "assetid": "Asset ID",
                "description": "asset",
                "paramType": "path",
                "name": "assetid",
                "required": true,
                "type": "string"
              }
            ],
            "responseMessages": [
            {
                "code": 401,
                "message": "Unauthorized"
              },
              {
                "code": 400,
                "message": "several error"
              },
              {
                "code":403,
                "message": "several error"
              },
              {
                "code": 404,
                "message": "asset not found"
              },
              {
                "code": 201,
                "message": "succes"
              },
              {
                 "code":500,
                 "message": "Internal error"
              }
            ]
          }, {
            "method": "PUT",
            "summary": "update transfer asset",
            "notes": "update transfer an asset",
            "nickname": "updateTransferAsset",
            "produces": [
              "application/json"
            ],
            "parameters": [
              {
                "assetid": "Asset ID",
                "description": "asset",
                "paramType": "path",
                "name": "assetid",
                "required": true,
                "type": "string"
              },
              {
                "recipient": "Recipient",
                "description": "Recipient",
                "paramType": "body",
                "name": "recipient",
                "required": true,
                "type": " {\"recipient\":\"toto\"}"
              }
            ],
            "responseMessages": [
               {
                   "code": 401,
                   "message": "Unauthorized"
                 },
                 {
                   "code": 400,
                   "message": "several error"
                 },
                 {
                   "code":403,
                   "message": "several error"
                 },
                 {
                   "code": 404,
                   "message": "asset not found"
                 },
                 {
                   "code": 201,
                   "message": "succes"
                 },
                 {
                    "code":500,
                    "message": "Internal error"
                 }
            ]
          }
        ]
    },
    {
      "path": "/v1/assets/reset",
      "operations": [
        {
          "method": "GET",
          "summary": "restAssets",
          "notes": "reset specific assets ",
          "nickname": "resetAssets",
          "authorizations": {},
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Unauthorized"
            }
          ]
        }
      ]
    },
    {
      "path": "/V1/history",
      "operations": [
        {
          "method": "GET",
          "summary": "history",
          "notes": "Returns history ",
          "nickname": "getAllAssets",
          "type": "array",
          "authorizations": {},
          "produces": [
            "application/json"
          ],
        "parameters": [
          {
            "filter": "filter",
              "description": "List of filter {all, added, lent, expired}",
                         "paramType": "query",
                         "name": "filter",
                         "required": false,
                         "type": "string"
          }
          ],
          "responseMessages": [
                {
                    "code": 401,
                    "message": "Unauthorized"
                  },
                  {
                    "code": 201,
                    "message": "succes"
                  },
                  {
                     "code":500,
                     "message": "Internal error"
                  }
          ]
        }
      ]
    },
    {
          "path": "/V1/sellers",
          "operations": [
            {
              "method": "GET",
              "summary": "sellers",
              "notes": "Returns sellers ",
              "nickname": "getSellers",
              "type": "array",
              "authorizations": {},
              "produces": [
                "application/json"
              ],
              "responseMessages": [
                  {
                    "code": 200,
                    "message": "json sellers"
                  },
                  {
                    "code": 500,
                    "message": "error"
                  },
                  {
                    "code": 401,
                    "message": "Unauthorized"
                  }
              ]
            }
          ]
     },
    {
          "path": "/V1/magictokens",
          "operations": [
            {
              "method": "POST",
              "summary": "magic token",
              "notes": "Returns route id and magic token ",
              "nickname": "getMagicToken",
              "type": "array",
              "authorizations": {},
              "produces": [
                "application/json"
              ],
              "responseMessages": [
                {
                    "code": 401,
                    "message": "Unauthorized"
                  },
                  {
                    "code": 400,
                    "message": "dataBase error"
                  },
                  {
                    "code": 200,
                    "message": "succes"
                  },
                  {
                     "code":500,
                     "message": "Internal error"
                  }
              ]
            }
          ]
     },
    {
        "path": "/v1/sellers/{sellerid}/trust",
          "operations": [
            {
              "method": "DELETE",
              "summary": "close route",
              "notes": "Returns route id and all not used tokenId ",
              "nickname": "closeRoute",
              "authorizations": {},
              "produces": [
                "application/json"
              ],
            "parameters": [
              {
                "sellerId": "Seller ID",
                "description": "seller",
                "paramType": "path",
                "name": "sellerid",
                "required": true,
                "type": "string"
              }
            ],
              "responseMessages": [
             {
                 "code": 401,
                 "message": "Unauthorized"
               },
               {
                 "code": 400,
                 "message": "dataBase error"
               },
               {
                 "code": 404,
                 "message": "invalid seller"
               },
               {
                 "code": 200,
                 "message": "succes"
               },
               {
                  "code":500,
                  "message": "Internal error"
               }
              ]
            }
          ]
     },
     {
          "path": "/v1/notificationServices",
          "operations": [
            {
              "method": "POST",
              "summary": "simulation of notification",
              "notes": "simulation of notification",
              "nickname": "notificationServices",
              "authorizations": {},
              "produces": [
                "application/json"
              ],
            "parameters": [
              {
                "notification": "notification",
                "description": "notification",
                "paramType": "body",
                "name": "body",
                "required": true,
                "type": "Notifications"
              }
            ],
              "responseMessages": [
                  {
                    "code": 200,
                    "message": "routeId and magictoken"
                  }
              ]
            }
          ]
     }
  ],
  "models": {
    "Notifications":
    {
        "properties":
        {
            "messageType" : {"type":"string"},
            "contentConsumerId" : {"type":"string"},
            "assetId" : {"type":"string"},
            "tokenId" : {"type":"string"},
            "routeId" : {"type":"string"},
            "contentSellerId" : {"type":"string"}
        }
    },
    "AssetId":{
      "properties": {
        "AssetId": {"type": "string"}
        }
      },
    "GetContentByAssetModel": {
      "id": "GetContentByAssetModel",
      "required": [
        "_id",
        "contents"
      ],
      "properties": {
        "_id": {"type": "string"},
        "contents": {
          "type": "array",
          "items": {
            "$ref": "ContentByAssetModel"
          }
        }
      }
    },
    "ContentByAssetModel": {
      "id": "ContentByAssetModel",
      "required": [
        "_id",
        "lastReading",
        "totalPages",
        "readPages"
      ],
      "properties": {
        "_id": {"type": "string"},
        "lastReading": {"type": "date"},
        "totalPages": {"type": "number"},
        "readPages": {"type": "number"}
      }
    },
    "GetAssetsByUseridModel": {
      "id": "GetAssetsByUseridModel",
      "required": [
        "idUser in cookie"
      ],
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "idAsset": {"type": "string"}
          }
        }
      }
    },
    "Asset": {
      "id": "Asset",
      "required": [
        "idAsset",
        "productEan",
        "addDate",
        "userId (in cookie)"
      ],
      "properties": {
        "idAsset": {"type": "string"},
        "origin": {"type": "string"},
        "productEan": {"type": "number"},
        "rights": {"$ref": "Rights"},
        "state": {"type": "string",
          "enum": [
            "Packed",
            "Activated",
            "Lent"
          ],
          "defaultValue": "Packed"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "Content"
          }
        },
        "addDate": {"type": "date"},
        "url_external": {"type": "string"}
      }
    },
    "allAsset": {
      "id": "allAsset",
      "properties": {
        "_id":{"type": "number"},
        "state": {"type": "string",
          "enum": [
            "Packed",
            "Activated",
            "Lent"
          ],
          "defaultValue": "Packed"
        },
        "addDate":{"type": "date"},
        "lastStateDate":{"type": "date"},
        "contents": {
          "type": "array",
          "items": {"$ref": "IdVide" },
          "properties":{
            "lastReading": {"type": "date"},
            "totalPages": {"type": "number"},
            "readPages": {"type": "number"}
          }
        },
        "rights": {"$ref": "Rights"},
        "productSnapshot":{"$ref": "productSnapshot"}

      }
    },
    "IdVide":{
      "id": "IdVide",
      "properties": {
        "_id2": {"$ref": "ReductedContent"},
        "type": {
          "type": "string",
          "enum": [
            "ebook",
            "comics"
          ]
        }
      }
    },
    "ReductedAsset": {
      "id": "ReductedAsset",
      "properties": {
        "_id":{"type": "number"},
        "addDate":{"type": "date"},
        "lastStaDate":{"type": "date"},
        "state": {"type": "string",
          "enum": [
            "Packed",
            "Activated",
            "Lent"
          ],
          "defaultValue": "Packed"
        },
        "rights": {"$ref": "Rights"},
        "reductedContent": {
          "type": "array",
          "items": {
            "$ref": "ReductedContent"
          }
        }
      }
    },
    "ReductedContent": {
      "id": "ReductedContent",
      "required": [
        "coverJpg",
        "metadata"
      ],
      "properties": {
        "_id": {"type": "string"},
        "modifyDate": {"type": "date"},
        "coverJpg": {"$ref": "CoverJpg"},
        "metadata": {"$ref": "ReMetaData"}
      }
    },
    "Content": {
      "id": "Content",
      "required": [
        "idContent",
        "contentProviderId",
        "type",
        "idObos",
        "idGDS"
      ],
      "properties": {
        "idContent": {"type": "number"},
        "contentProviderId": {"type": "number"},
        "type": {"type": "string"},
        "metadata": {"$ref": "MetaData"},
        "cover": {"$ref": "Cover"},
        "url": {"type": "string"},
        "mustBeEncrypted": {"type": "boolean"},
        "idObos": {"type": "number"},
        "idGDS": {"type": "number"}
      }
    },
    "Rights": {
      "id": "Rights",
      "required": [
        "termsOfUse",
        "stateOfUse"
      ],
      "properties": {
        "termsOfUse": {"$ref": "TermsOfUse"},
        "stateOfUse": {"$ref": "StateOfUse"}
      }
    },
    "TermsOfUse": {
      "id": "TermsOfUse",
      "required": [
        "maxLends",
        "maxDonation",
        "type",
        "end"
      ],
      "properties": {
        "maxLends": {"type": "number"},
        "maxDonation": {"type": "number"},
        "type": {"type": "string"},
        "end": {"type": "date"}
      }
    },
    "StateOfUse": {
      "id": "StateOfUse",
      "properties": {
        "lends": {"$ref": "Lends"},
        "donation": {"$ref": "Donation"}
      }
    },
    "Lends": {
      "id": "Lends",
      "properties": {
        "count": {"type": "number"},
        "value": {
          "type": "array",
          "item": {
            "tokenId": {"type": "number"},
            "startLend": {"type": "date"},
            "endLend": {"type": "date"}
          }
        }
      }
    },
    "Donation": {
      "id": "Donation",
      "properties": {
        "count": {"type": "number"},
        "value": {
          "type": "array",
          "item": {
            "tokenId": {"type": "number"},
            "donationLend": {"type": "date"}
          }
        }
      }
    },
    "GetDataByContentModel": {
      "id": "GetDataByContentModel",
      "required": [
        "_id"
      ],
      "properties": {
        "_id": {"type": "string"},
        "coverJpg": {"$ref": "CoverJpg"},
        "metaData": {"$ref": "MetaData"}
      }
    },
    "CoverJpg": {
      "id": "CoverJpg",
      "properties": {
        "xSmall": {"type": "string"},
        "small": {"type": "string"},
        "medium": {"type": "string"},
        "large": {"type": "string"},
        "xLarge": {"type": "string"},
        "ratio": {"type": "number"}
      }
    },
    "MetaData": {
      "id": "MetaData",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "coverUrl": {"type": "string"},
        "custom": {"type": "string"},
        "language": {"type": "string"},
        "format": {"type": "string"},
        "pages": {"type": "number"},
        "resume": {"type": "string"},
        "title": {"type": "string"},
        "authorName": {"type": "string"},
        "author": {"type": "string"},
        "subject": {"type": "array"},
        "published": {"type": "string"},
        "bookInfo": {"$ref": "BookInfo"}
      }
    }
  },
  "BookInfo": {
    "id": "BookInfo",
    "properties": {
      "publisher": {"type": "string"},
      "imprint": {"type": "string"},
      "collection": {"type": "string"}
    }
  },
  "ReMetaData": {
    "id": "ReMetaData",
    "required": [
      "name",
      "value"
    ],
    "properties": {
      "title": {"type": "string"},
      "authorName": {"type": "string"},
      "author": {"type": "string"},
      "subject": {"type": "array"}
    }
  },

  "StateInfo": {
    "id": "StateInfo",
    "required": [
      "all",
      "bought",
      "borrowed",
      "lend"
    ],
    "properties": {
      "all": {"type": "number"},
      "bought": {"type": "number"},
      "borrowed": {"type": "number"},
      "lent": {"type": "number"}
    }
  },
  "HistoryStateInfo":
  {
      "id": "HistoryStateInfo",
      "required": [
        "all",
        "boughtGift",
        "borrowedLent",
        "expired"
      ],
      "properties": {
        "all": {"type": "number"},
        "boughtGift": {"type": "number"},
        "borrowedLent": {"type": "number"},
        "expired": {"type": "number"}
      }
  }

}